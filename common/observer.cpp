/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -a observer.h:observer.cpp ../xml/observer.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "observer.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ObserverAdaptor
 */

ObserverAdaptor::ObserverAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ObserverAdaptor::~ObserverAdaptor()
{
    // destructor
}

void ObserverAdaptor::ManufacturerReceived(const QString &address, ushort cid, const QByteArray &value)
{
    // handle method call org.bluez.Observer.ManufacturerReceived
    QMetaObject::invokeMethod(parent(), "ManufacturerReceived", Q_ARG(QString, address), Q_ARG(ushort, cid), Q_ARG(QByteArray, value));
}

void ObserverAdaptor::ServiceReceived(const QString &address, ushort uuid, const QByteArray &value)
{
    // handle method call org.bluez.Observer.ServiceReceived
    QMetaObject::invokeMethod(parent(), "ServiceReceived", Q_ARG(QString, address), Q_ARG(ushort, uuid), Q_ARG(QByteArray, value));
}

